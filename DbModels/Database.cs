



















// This file was automatically generated by the PetaPoco T4 Template
// Do not make changes directly to this file - edit the template instead
// 
// The following connection settings were used to generate this file
// 
//     Connection String Name: `Postgres`
//     Provider:               `Npgsql`
//     Connection String:      `server=192.168.10.40;Port=5432;Database=openlawoffice;User Id=postgres;password=**zapped**;`
//     Schema:                 ``
//     Include Views:          `False`



using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using PetaPoco;

namespace OpenLawOffice.Data.DbModels
{

	internal partial class PostgresDB : Database
	{
		internal PostgresDB() 
			: base("Postgres")
		{
			CommonConstruct();
		}

		internal PostgresDB(string connectionStringName) 
			: base(connectionStringName)
		{
			CommonConstruct();
		}
		
		partial void CommonConstruct();
		
		internal interface IFactory
		{
			PostgresDB GetInstance();
		}
		
		internal static IFactory Factory { get; set; }
        internal static PostgresDB GetInstance()
        {
			if (_instance!=null)
				return _instance;
				
			if (Factory!=null)
				return Factory.GetInstance();
			else
				return new PostgresDB();
        }

		[ThreadStatic] static PostgresDB _instance;
		
		public override void OnBeginTransaction()
		{
			if (_instance==null)
				_instance=this;
		}

        public override void OnEndTransaction()
		{
			if (_instance==this)
				_instance=null;
		}
        

		internal class Record<T> where T:new()
		{
			internal static PostgresDB repo { get { return PostgresDB.GetInstance(); } }
			internal bool IsNew() { return repo.IsNew(this); }
			internal object Insert() { return repo.Insert(this); }

			internal void Save() { repo.Save(this); }
			internal int Update() { return repo.Update(this); }

			internal int Update(IEnumerable<string> columns) { return repo.Update(this, columns); }
			internal static int Update(string sql, params object[] args) { return repo.Update<T>(sql, args); }
			internal static int Update(Sql sql) { return repo.Update<T>(sql); }
			internal int Delete() { return repo.Delete(this); }
			internal static int Delete(string sql, params object[] args) { return repo.Delete<T>(sql, args); }
			internal static int Delete(Sql sql) { return repo.Delete<T>(sql); }
			internal static int Delete(object primaryKey) { return repo.Delete<T>(primaryKey); }
			internal static bool Exists(object primaryKey) { return repo.Exists<T>(primaryKey); }
			internal static bool Exists(string sql, params object[] args) { return repo.Exists<T>(sql, args); }
			internal static T SingleOrDefault(object primaryKey) { return repo.SingleOrDefault<T>(primaryKey); }
			internal static T SingleOrDefault(string sql, params object[] args) { return repo.SingleOrDefault<T>(sql, args); }
			internal static T SingleOrDefault(Sql sql) { return repo.SingleOrDefault<T>(sql); }
			internal static T FirstOrDefault(string sql, params object[] args) { return repo.FirstOrDefault<T>(sql, args); }
			internal static T FirstOrDefault(Sql sql) { return repo.FirstOrDefault<T>(sql); }
			internal static T Single(object primaryKey) { return repo.Single<T>(primaryKey); }
			internal static T Single(string sql, params object[] args) { return repo.Single<T>(sql, args); }
			internal static T Single(Sql sql) { return repo.Single<T>(sql); }
			internal static T First(string sql, params object[] args) { return repo.First<T>(sql, args); }
			internal static T First(Sql sql) { return repo.First<T>(sql); }
			internal static List<T> Fetch(string sql, params object[] args) { return repo.Fetch<T>(sql, args); }
			internal static List<T> Fetch(Sql sql) { return repo.Fetch<T>(sql); }
			internal static List<T> Fetch(long page, long itemsPerPage, string sql, params object[] args) { return repo.Fetch<T>(page, itemsPerPage, sql, args); }
			internal static List<T> Fetch(long page, long itemsPerPage, Sql sql) { return repo.Fetch<T>(page, itemsPerPage, sql); }
			internal static List<T> SkipTake(long skip, long take, string sql, params object[] args) { return repo.SkipTake<T>(skip, take, sql, args); }
			internal static List<T> SkipTake(long skip, long take, Sql sql) { return repo.SkipTake<T>(skip, take, sql); }
			internal static Page<T> Page(long page, long itemsPerPage, string sql, params object[] args) { return repo.Page<T>(page, itemsPerPage, sql, args); }
			internal static Page<T> Page(long page, long itemsPerPage, Sql sql) { return repo.Page<T>(page, itemsPerPage, sql); }
			internal static IEnumerable<T> Query(string sql, params object[] args) { return repo.Query<T>(sql, args); }
			internal static IEnumerable<T> Query(Sql sql) { return repo.Query<T>(sql); }

		}

	}
	





    
	[TableName("task_time")]


	[PrimaryKey("id", autoIncrement=false)]

	[ExplicitColumns]
    internal partial class TaskTime : PostgresDB.Record<TaskTime>  
    {



		[Column("utc_disabled")] internal DateTime? UtcDisabled { get; set; }





		[Column("utc_modified")] internal DateTime UtcModified { get; set; }





		[Column("utc_created")] internal DateTime UtcCreated { get; set; }





		[Column("disabled_by_user_id")] internal int? DisabledByUserId { get; set; }





		[Column("modified_by_user_id")] internal int ModifiedByUserId { get; set; }





		[Column("created_by_user_id")] internal int CreatedByUserId { get; set; }





		[Column("time_id")] internal string TimeId { get; set; }





		[Column("task_id")] internal long TaskId { get; set; }





		[Column("id")] internal string Id { get; set; }



	}

    
	[TableName("time")]


	[PrimaryKey("id", autoIncrement=false)]

	[ExplicitColumns]
    internal partial class Time : PostgresDB.Record<Time>  
    {



		[Column("utc_disabled")] internal DateTime? UtcDisabled { get; set; }





		[Column("utc_modified")] internal DateTime UtcModified { get; set; }





		[Column("utc_created")] internal DateTime UtcCreated { get; set; }





		[Column("disabled_by_user_id")] internal int? DisabledByUserId { get; set; }





		[Column("modified_by_user_id")] internal int ModifiedByUserId { get; set; }





		[Column("created_by_user_id")] internal int CreatedByUserId { get; set; }





		[Column("worker_contact_id")] internal int WorkerContactId { get; set; }





		[Column("stop")] internal DateTime Stop { get; set; }





		[Column("start")] internal DateTime Start { get; set; }





		[Column("id")] internal string Id { get; set; }



	}

    
	[TableName("task_tag")]


	[PrimaryKey("id", autoIncrement=false)]

	[ExplicitColumns]
    internal partial class TaskTag : PostgresDB.Record<TaskTag>  
    {



		[Column("utc_disabled")] internal DateTime? UtcDisabled { get; set; }





		[Column("utc_modified")] internal DateTime UtcModified { get; set; }





		[Column("utc_created")] internal DateTime UtcCreated { get; set; }





		[Column("disabled_by_user_id")] internal int? DisabledByUserId { get; set; }





		[Column("modified_by_user_id")] internal int ModifiedByUserId { get; set; }





		[Column("created_by_user_id")] internal int CreatedByUserId { get; set; }





		[Column("tag")] internal string Tag { get; set; }





		[Column("tag_category_id")] internal int? TagCategoryId { get; set; }





		[Column("task_id")] internal long TaskId { get; set; }





		[Column("id")] internal string Id { get; set; }



	}

    
	[TableName("task")]


	[PrimaryKey("id")]



	[ExplicitColumns]
    internal partial class Task : PostgresDB.Record<Task>  
    {



		[Column("utc_disabled")] internal DateTime? UtcDisabled { get; set; }





		[Column("utc_modified")] internal DateTime UtcModified { get; set; }





		[Column("utc_created")] internal DateTime UtcCreated { get; set; }





		[Column("disabled_by_user_id")] internal int? DisabledByUserId { get; set; }





		[Column("modified_by_user_id")] internal int ModifiedByUserId { get; set; }





		[Column("created_by_user_id")] internal int CreatedByUserId { get; set; }





		[Column("sequential_predecessor_id")] internal long? SequentialPredecessorId { get; set; }





		[Column("is_grouping_task")] internal string IsGroupingTask { get; set; }





		[Column("parent_id")] internal long? ParentId { get; set; }





		[Column("actual_end")] internal DateTime? ActualEnd { get; set; }





		[Column("projected_end")] internal DateTime? ProjectedEnd { get; set; }





		[Column("due_date")] internal DateTime? DueDate { get; set; }





		[Column("projected_start")] internal DateTime? ProjectedStart { get; set; }





		[Column("description")] internal string Description { get; set; }





		[Column("title")] internal string Title { get; set; }





		[Column("id")] internal long Id { get; set; }



	}

    
	[TableName("task_responsible_user")]


	[PrimaryKey("id", autoIncrement=false)]

	[ExplicitColumns]
    internal partial class TaskResponsibleUser : PostgresDB.Record<TaskResponsibleUser>  
    {



		[Column("utc_disabled")] internal DateTime? UtcDisabled { get; set; }





		[Column("utc_modified")] internal DateTime UtcModified { get; set; }





		[Column("utc_created")] internal DateTime UtcCreated { get; set; }





		[Column("disabled_by_user_id")] internal int? DisabledByUserId { get; set; }





		[Column("modified_by_user_id")] internal int ModifiedByUserId { get; set; }





		[Column("created_by_user_id")] internal int CreatedByUserId { get; set; }





		[Column("responsibility")] internal string Responsibility { get; set; }





		[Column("user_id")] internal int UserId { get; set; }





		[Column("task_id")] internal long TaskId { get; set; }





		[Column("id")] internal string Id { get; set; }



	}

    
	[TableName("matter_contact")]


	[PrimaryKey("id")]



	[ExplicitColumns]
    internal partial class MatterContact : PostgresDB.Record<MatterContact>  
    {



		[Column("utc_disabled")] internal DateTime? UtcDisabled { get; set; }





		[Column("utc_modified")] internal DateTime UtcModified { get; set; }





		[Column("utc_created")] internal DateTime UtcCreated { get; set; }





		[Column("disabled_by_user_id")] internal int? DisabledByUserId { get; set; }





		[Column("modified_by_user_id")] internal int ModifiedByUserId { get; set; }





		[Column("created_by_user_id")] internal int CreatedByUserId { get; set; }





		[Column("role")] internal string Role { get; set; }





		[Column("contact_id")] internal int ContactId { get; set; }





		[Column("matter_id")] internal string MatterId { get; set; }





		[Column("id")] internal int Id { get; set; }



	}

    
	[TableName("task_assigned_contact")]


	[PrimaryKey("id", autoIncrement=false)]

	[ExplicitColumns]
    internal partial class TaskAssignedContact : PostgresDB.Record<TaskAssignedContact>  
    {



		[Column("utc_disabled")] internal DateTime? UtcDisabled { get; set; }





		[Column("utc_modified")] internal DateTime UtcModified { get; set; }





		[Column("utc_created")] internal DateTime UtcCreated { get; set; }





		[Column("disabled_by_user_id")] internal int? DisabledByUserId { get; set; }





		[Column("modified_by_user_id")] internal int ModifiedByUserId { get; set; }





		[Column("created_by_user_id")] internal int CreatedByUserId { get; set; }





		[Column("assignment_type")] internal short AssignmentType { get; set; }





		[Column("contact_id")] internal int ContactId { get; set; }





		[Column("task_id")] internal long TaskId { get; set; }





		[Column("id")] internal string Id { get; set; }



	}

    
	[TableName("contact")]


	[PrimaryKey("id")]



	[ExplicitColumns]
    internal partial class Contact : PostgresDB.Record<Contact>  
    {



		[Column("utc_disabled")] internal DateTime? UtcDisabled { get; set; }





		[Column("utc_modified")] internal DateTime UtcModified { get; set; }





		[Column("utc_created")] internal DateTime UtcCreated { get; set; }





		[Column("disabled_by_user_id")] internal int? DisabledByUserId { get; set; }





		[Column("modified_by_user_id")] internal int ModifiedByUserId { get; set; }





		[Column("created_by_user_id")] internal int CreatedByUserId { get; set; }





		[Column("referred_by_name")] internal string ReferredByName { get; set; }





		[Column("gender")] internal string Gender { get; set; }





		[Column("business_home_page")] internal string BusinessHomePage { get; set; }





		[Column("personal_home_page")] internal string PersonalHomePage { get; set; }





		[Column("instant_messaging_address")] internal string InstantMessagingAddress { get; set; }





		[Column("language")] internal string Language { get; set; }





		[Column("spouse_name")] internal string SpouseName { get; set; }





		[Column("profession")] internal string Profession { get; set; }





		[Column("assistant_name")] internal string AssistantName { get; set; }





		[Column("manager_name")] internal string ManagerName { get; set; }





		[Column("office_location")] internal string OfficeLocation { get; set; }





		[Column("department_name")] internal string DepartmentName { get; set; }





		[Column("company_name")] internal string CompanyName { get; set; }





		[Column("title")] internal string Title { get; set; }





		[Column("wedding")] internal DateTime? Wedding { get; set; }





		[Column("birthday")] internal DateTime? Birthday { get; set; }





		[Column("telephone10_telephone_number")] internal string Telephone10TelephoneNumber { get; set; }





		[Column("telephone10_display_name")] internal string Telephone10DisplayName { get; set; }





		[Column("telephone9_telephone_number")] internal string Telephone9TelephoneNumber { get; set; }





		[Column("telephone9_display_name")] internal string Telephone9DisplayName { get; set; }





		[Column("telephone8_telephone_number")] internal string Telephone8TelephoneNumber { get; set; }





		[Column("telephone8_display_name")] internal string Telephone8DisplayName { get; set; }





		[Column("telephone7_telephone_number")] internal string Telephone7TelephoneNumber { get; set; }





		[Column("telephone7_display_name")] internal string Telephone7DisplayName { get; set; }





		[Column("telephone6_telephone_number")] internal string Telephone6TelephoneNumber { get; set; }





		[Column("telephone6_display_name")] internal string Telephone6DisplayName { get; set; }





		[Column("telephone5_telephone_number")] internal string Telephone5TelephoneNumber { get; set; }





		[Column("telephone5_display_name")] internal string Telephone5DisplayName { get; set; }





		[Column("telephone4_telephone_number")] internal string Telephone4TelephoneNumber { get; set; }





		[Column("telephone4_display_name")] internal string Telephone4DisplayName { get; set; }





		[Column("telephone3_telephone_number")] internal string Telephone3TelephoneNumber { get; set; }





		[Column("telephone3_display_name")] internal string Telephone3DisplayName { get; set; }





		[Column("telephone2_telephone_number")] internal string Telephone2TelephoneNumber { get; set; }





		[Column("telephone2_display_name")] internal string Telephone2DisplayName { get; set; }





		[Column("telephone1_telephone_number")] internal string Telephone1TelephoneNumber { get; set; }





		[Column("telephone1_display_name")] internal string Telephone1DisplayName { get; set; }





		[Column("address3_address_post_office_box")] internal string Address3AddressPostOfficeBox { get; set; }





		[Column("address3_address_country_code")] internal string Address3AddressCountryCode { get; set; }





		[Column("address3_address_country")] internal string Address3AddressCountry { get; set; }





		[Column("address3_address_postal_code")] internal string Address3AddressPostalCode { get; set; }





		[Column("address3_address_state_or_province")] internal string Address3AddressStateOrProvince { get; set; }





		[Column("address3_address_city")] internal string Address3AddressCity { get; set; }





		[Column("address3_address_street")] internal string Address3AddressStreet { get; set; }





		[Column("address3_display_name")] internal string Address3DisplayName { get; set; }





		[Column("address2_address_post_office_box")] internal string Address2AddressPostOfficeBox { get; set; }





		[Column("address2_address_country_code")] internal string Address2AddressCountryCode { get; set; }





		[Column("address2_address_country")] internal string Address2AddressCountry { get; set; }





		[Column("address2_address_postal_code")] internal string Address2AddressPostalCode { get; set; }





		[Column("address2_address_state_or_province")] internal string Address2AddressStateOrProvince { get; set; }





		[Column("address2_address_city")] internal string Address2AddressCity { get; set; }





		[Column("address2_address_street")] internal string Address2AddressStreet { get; set; }





		[Column("address2_display_name")] internal string Address2DisplayName { get; set; }





		[Column("address1_address_post_office_box")] internal string Address1AddressPostOfficeBox { get; set; }





		[Column("address1_address_country_code")] internal string Address1AddressCountryCode { get; set; }





		[Column("address1_address_country")] internal string Address1AddressCountry { get; set; }





		[Column("address1_address_postal_code")] internal string Address1AddressPostalCode { get; set; }





		[Column("address1_address_state_or_province")] internal string Address1AddressStateOrProvince { get; set; }





		[Column("address1_address_city")] internal string Address1AddressCity { get; set; }





		[Column("address1_address_street")] internal string Address1AddressStreet { get; set; }





		[Column("address1_display_name")] internal string Address1DisplayName { get; set; }





		[Column("fax3_fax_number")] internal string Fax3FaxNumber { get; set; }





		[Column("fax3_display_name")] internal string Fax3DisplayName { get; set; }





		[Column("fax2_fax_number")] internal string Fax2FaxNumber { get; set; }





		[Column("fax2_display_name")] internal string Fax2DisplayName { get; set; }





		[Column("fax1_fax_number")] internal string Fax1FaxNumber { get; set; }





		[Column("fax1_display_name")] internal string Fax1DisplayName { get; set; }





		[Column("email3_email_address")] internal string Email3EmailAddress { get; set; }





		[Column("email3_display_name")] internal string Email3DisplayName { get; set; }





		[Column("email2_email_address")] internal string Email2EmailAddress { get; set; }





		[Column("email2_display_name")] internal string Email2DisplayName { get; set; }





		[Column("email1_email_address")] internal string Email1EmailAddress { get; set; }





		[Column("email1_display_name")] internal string Email1DisplayName { get; set; }





		[Column("display_name")] internal string DisplayName { get; set; }





		[Column("initials")] internal string Initials { get; set; }





		[Column("given_name")] internal string GivenName { get; set; }





		[Column("middle_name")] internal string MiddleName { get; set; }





		[Column("surname")] internal string Surname { get; set; }





		[Column("display_name_prefix")] internal string DisplayNamePrefix { get; set; }





		[Column("generation")] internal string Generation { get; set; }





		[Column("nickname")] internal string Nickname { get; set; }





		[Column("is_organization")] internal bool IsOrganization { get; set; }





		[Column("id")] internal int Id { get; set; }



	}

    
	[TableName("task_matter")]


	[PrimaryKey("id", autoIncrement=false)]

	[ExplicitColumns]
    internal partial class TaskMatter : PostgresDB.Record<TaskMatter>  
    {



		[Column("utc_disabled")] internal DateTime? UtcDisabled { get; set; }





		[Column("utc_modified")] internal DateTime UtcModified { get; set; }





		[Column("utc_created")] internal DateTime UtcCreated { get; set; }





		[Column("disabled_by_user_id")] internal int? DisabledByUserId { get; set; }





		[Column("modified_by_user_id")] internal int ModifiedByUserId { get; set; }





		[Column("created_by_user_id")] internal int CreatedByUserId { get; set; }





		[Column("matter_id")] internal string MatterId { get; set; }





		[Column("task_id")] internal long TaskId { get; set; }





		[Column("id")] internal string Id { get; set; }



	}

    
	[TableName("responsible_user")]


	[PrimaryKey("id")]



	[ExplicitColumns]
    internal partial class ResponsibleUser : PostgresDB.Record<ResponsibleUser>  
    {



		[Column("utc_disabled")] internal DateTime? UtcDisabled { get; set; }





		[Column("utc_modified")] internal DateTime UtcModified { get; set; }





		[Column("utc_created")] internal DateTime UtcCreated { get; set; }





		[Column("disabled_by_user_id")] internal int? DisabledByUserId { get; set; }





		[Column("modified_by_user_id")] internal int ModifiedByUserId { get; set; }





		[Column("created_by_user_id")] internal int CreatedByUserId { get; set; }





		[Column("responsibility")] internal string Responsibility { get; set; }





		[Column("user_id")] internal int UserId { get; set; }





		[Column("matter_id")] internal string MatterId { get; set; }





		[Column("id")] internal int Id { get; set; }



	}

    
	[TableName("matter_tag")]


	[PrimaryKey("id", autoIncrement=false)]

	[ExplicitColumns]
    internal partial class MatterTag : PostgresDB.Record<MatterTag>  
    {



		[Column("utc_disabled")] internal DateTime? UtcDisabled { get; set; }





		[Column("utc_modified")] internal DateTime UtcModified { get; set; }





		[Column("utc_created")] internal DateTime UtcCreated { get; set; }





		[Column("disabled_by_user_id")] internal int? DisabledByUserId { get; set; }





		[Column("modified_by_user_id")] internal int ModifiedByUserId { get; set; }





		[Column("created_by_user_id")] internal int CreatedByUserId { get; set; }





		[Column("tag")] internal string Tag { get; set; }





		[Column("tag_category_id")] internal int? TagCategoryId { get; set; }





		[Column("matter_id")] internal string MatterId { get; set; }





		[Column("id")] internal string Id { get; set; }



	}

    
	[TableName("user")]


	[PrimaryKey("id")]



	[ExplicitColumns]
    internal partial class User : PostgresDB.Record<User>  
    {



		[Column("utc_disabled")] internal DateTime? UtcDisabled { get; set; }





		[Column("utc_modified")] internal DateTime UtcModified { get; set; }





		[Column("utc_created")] internal DateTime UtcCreated { get; set; }





		[Column("user_auth_token_expiry")] internal DateTime? UserAuthTokenExpiry { get; set; }





		[Column("user_auth_token")] internal string UserAuthToken { get; set; }





		[Column("password_salt")] internal string PasswordSalt { get; set; }





		[Column("password")] internal string Password { get; set; }





		[Column("username")] internal string Username { get; set; }





		[Column("id")] internal int Id { get; set; }



	}

    
	[TableName("tag_category")]


	[PrimaryKey("id")]



	[ExplicitColumns]
    internal partial class TagCategory : PostgresDB.Record<TagCategory>  
    {



		[Column("utc_disabled")] internal DateTime? UtcDisabled { get; set; }





		[Column("utc_modified")] internal DateTime UtcModified { get; set; }





		[Column("utc_created")] internal DateTime UtcCreated { get; set; }





		[Column("disabled_by_user_id")] internal int? DisabledByUserId { get; set; }





		[Column("modified_by_user_id")] internal int ModifiedByUserId { get; set; }





		[Column("created_by_user_id")] internal int CreatedByUserId { get; set; }





		[Column("name")] internal string Name { get; set; }





		[Column("id")] internal int Id { get; set; }



	}

    
	[TableName("secured_resource")]


	[PrimaryKey("id", autoIncrement=false)]

	[ExplicitColumns]
    internal partial class SecuredResource : PostgresDB.Record<SecuredResource>  
    {



		[Column("utc_disabled")] internal DateTime? UtcDisabled { get; set; }





		[Column("utc_modified")] internal DateTime UtcModified { get; set; }





		[Column("utc_created")] internal DateTime UtcCreated { get; set; }





		[Column("disabled_by_user_id")] internal int? DisabledByUserId { get; set; }





		[Column("modified_by_user_id")] internal int ModifiedByUserId { get; set; }





		[Column("created_by_user_id")] internal int CreatedByUserId { get; set; }





		[Column("id")] internal string Id { get; set; }



	}

    
	[TableName("area")]


	[PrimaryKey("id")]



	[ExplicitColumns]
    internal partial class Area : PostgresDB.Record<Area>  
    {



		[Column("utc_disabled")] internal DateTime? UtcDisabled { get; set; }





		[Column("utc_modified")] internal DateTime UtcModified { get; set; }





		[Column("utc_created")] internal DateTime UtcCreated { get; set; }





		[Column("disabled_by_user_id")] internal int? DisabledByUserId { get; set; }





		[Column("modified_by_user_id")] internal int ModifiedByUserId { get; set; }





		[Column("created_by_user_id")] internal int CreatedByUserId { get; set; }





		[Column("description")] internal string Description { get; set; }





		[Column("name")] internal string Name { get; set; }





		[Column("parent_id")] internal int? ParentId { get; set; }





		[Column("id")] internal int Id { get; set; }



	}

    
	[TableName("matter")]


	[PrimaryKey("id", autoIncrement=false)]

	[ExplicitColumns]
    internal partial class Matter : PostgresDB.Record<Matter>  
    {



		[Column("utc_disabled")] internal DateTime? UtcDisabled { get; set; }





		[Column("utc_modified")] internal DateTime UtcModified { get; set; }





		[Column("utc_created")] internal DateTime UtcCreated { get; set; }





		[Column("disabled_by_user_id")] internal int? DisabledByUserId { get; set; }





		[Column("modified_by_user_id")] internal int ModifiedByUserId { get; set; }





		[Column("created_by_user_id")] internal int CreatedByUserId { get; set; }





		[Column("id")] internal string Id { get; set; }





		[Column("synopsis")] internal string Synopsis { get; set; }





		[Column("parent_id")] internal string ParentId { get; set; }





		[Column("title")] internal string Title { get; set; }



	}

    
	[TableName("secured_resource_acl")]


	[PrimaryKey("id", autoIncrement=false)]

	[ExplicitColumns]
    internal partial class SecuredResourceAcl : PostgresDB.Record<SecuredResourceAcl>  
    {



		[Column("utc_disabled")] internal DateTime? UtcDisabled { get; set; }





		[Column("utc_modified")] internal DateTime UtcModified { get; set; }





		[Column("utc_created")] internal DateTime UtcCreated { get; set; }





		[Column("disabled_by_user_id")] internal int? DisabledByUserId { get; set; }





		[Column("modified_by_user_id")] internal int ModifiedByUserId { get; set; }





		[Column("created_by_user_id")] internal int CreatedByUserId { get; set; }





		[Column("deny_flags")] internal int DenyFlags { get; set; }





		[Column("allow_flags")] internal int AllowFlags { get; set; }





		[Column("user_id")] internal int UserId { get; set; }





		[Column("secured_resource_id")] internal string SecuredResourceId { get; set; }





		[Column("id")] internal string Id { get; set; }



	}

    
	[TableName("area_acl")]


	[PrimaryKey("id")]



	[ExplicitColumns]
    internal partial class AreaAcl : PostgresDB.Record<AreaAcl>  
    {



		[Column("utc_disabled")] internal DateTime? UtcDisabled { get; set; }





		[Column("utc_modified")] internal DateTime UtcModified { get; set; }





		[Column("utc_created")] internal DateTime UtcCreated { get; set; }





		[Column("disabled_by_user_id")] internal int? DisabledByUserId { get; set; }





		[Column("modified_by_user_id")] internal int ModifiedByUserId { get; set; }





		[Column("created_by_user_id")] internal int CreatedByUserId { get; set; }





		[Column("deny_flags")] internal int DenyFlags { get; set; }





		[Column("allow_flags")] internal int AllowFlags { get; set; }





		[Column("user_id")] internal int UserId { get; set; }





		[Column("security_area_id")] internal int SecurityAreaId { get; set; }





		[Column("id")] internal int Id { get; set; }



	}


}



